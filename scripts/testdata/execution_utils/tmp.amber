#!amber

SHADER compute compute_shader GLSL
#version 310 es
layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;
layout(std430, binding = 0) buffer buffer_0 {
 uint ext_0[6];
};
int local_limiter_0 = 0;

void main()
{
 for(int i = 0; i < 6; i ++)
  {
   local_limiter_0 ++;
   if(local_limiter_0 > 10)
    break;
   ext_0[(i) % ext_0.length()] = 1u;
  }
}
END

BUFFER buffer_0 DATA_TYPE uint32 DATA
0 0 0 0 0 0 # DATA_SIZE 6
END

PIPELINE compute pipeline
    ATTACH compute_shader

    BIND BUFFER buffer_0 AS storage DESCRIPTOR_SET 0 BINDING 0
END

RUN pipeline 1 1 1
